version: '3.0'

services:
    db:
        image: postgres:13-alpine
        container_name: ${DOCKER_NAME}-db
        restart: unless-stopped
        volumes:
            - ./docker/postgres/init:/docker-entrypoint-initdb.d
            - ./docker/postgres/data/:/var/lib/postgresql/data/
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        networks:
            - main

    laravel:
        build:
            args:
                user: ${USER}
                uid: ${UID}
            context: ./docker/php/
            dockerfile: Dockerfile
        image: laravel
        container_name: ${DOCKER_NAME}-laravel
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./app/:/var/www
            - ./docker/php/conf/:/usr/local/etc/php
        networks:
            - main
        depends_on:
            - db

    nginx:
        image: nginx:1.17-alpine
        container_name: ${DOCKER_NAME}-nginx
        restart: unless-stopped
        ports:
            - ${NGINX_PORT}:80
        volumes:
            - ./app/:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - main
        depends_on:
            - laravel

    pg-compeng:
        container_name: ${DOCKER_NAME}-datalens-pg-compeng
        image: postgres:13-alpine
        environment:
            POSTGRES_PASSWORD: "postgres"
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
        networks:
            - main

    control-api:
        container_name: ${DOCKER_NAME}-datalens-control-api
        image: ghcr.io/datalens-tech/datalens-control-api:0.2091.0
        environment:
            BI_API_UWSGI_WORKERS_COUNT: 4
            CONNECTOR_AVAILABILITY_VISIBLE: "clickhouse,postgres,chyt,ydb,mysql,greenplum"
            RQE_FORCE_OFF: 1
            DL_CRY_ACTUAL_KEY_ID: key_1
            DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
            RQE_SECRET_KEY: ""
            US_HOST: "http://us:8083"
            US_MASTER_TOKEN: "fake-us-master-token"
            CONFIG_PATH: "/etc/backend-configs/api.yaml"
        networks:
            - main
        depends_on:
            - us
        volumes:
            - ./docker/datalens/backend-configs:/etc/backend-configs

    data-api:
        container_name: ${DOCKER_NAME}-datalens-data-api
        image: ghcr.io/datalens-tech/datalens-data-api:0.2091.0
        environment:
            GUNICORN_WORKERS_COUNT: 5
            RQE_FORCE_OFF: 1
            CACHES_ON: 0
            MUTATIONS_CACHES_ON: 0
            RQE_SECRET_KEY: ""
            DL_CRY_ACTUAL_KEY_ID: key_1
            DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
            BI_COMPENG_PG_ON: 1
            BI_COMPENG_PG_URL: "postgresql://postgres:postgres@pg-compeng:5432/postgres"
            US_HOST: "http://us:8083"
            US_MASTER_TOKEN: "fake-us-master-token"
            CONFIG_PATH: "/etc/backend-configs/api.yaml"
        networks:
            - main
        depends_on:
            - us
            - pg-compeng
        volumes:
            - ./docker/datalens/backend-configs:/etc/backend-configs

    pg-us:
        container_name: ${DOCKER_NAME}-datalens-pg-us
        image: postgres:13-alpine
        environment:
            POSTGRES_DB: us-db-ci_purgeable
            POSTGRES_USER: us
            POSTGRES_PASSWORD: us
        networks:
            - main
        volumes:
            - ./docker/datalens/metadata:/var/lib/postgresql/data

    us:
        container_name: ${DOCKER_NAME}-datalens-us
        image: ghcr.io/datalens-tech/datalens-us:0.209.0
        depends_on:
            - pg-us
            - db
        environment:
            APP_INSTALLATION: "opensource"
            APP_ENV: "prod"
            MASTER_TOKEN: "fake-us-master-token"
            POSTGRES_DSN_LIST: ${METADATA_POSTGRES_DSN_LIST:-postgres://us:us@pg-us:5432/us-db-ci_purgeable}
            SKIP_INSTALL_DB_EXTENSIONS: ${METADATA_SKIP_INSTALL_DB_EXTENSIONS:-0}
            USE_DEMO_DATA: ${USE_DEMO_DATA:-1}
            HC: ${HC:-0}
            NODE_EXTRA_CA_CERTS: /certs/root.crt
        networks:
            - main
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ./docker/datalens/certs:/certs

    datalens:
        container_name: ${DOCKER_NAME}-datalens-ui
        image: ghcr.io/datalens-tech/datalens-ui:0.1765.0
        ports:
            - ${UI_PORT:-8080}:8080
        depends_on:
            - us
            - control-api
            - data-api
        networks:
            - main
        volumes:
            - ./docker/datalens/nginx:/etc/nginx
        environment:
            APP_MODE: "full"
            APP_ENV: "production"
            APP_INSTALLATION: "opensource"
            AUTH_POLICY: "disabled"
            US_ENDPOINT: "http://us:8083"
            BI_API_ENDPOINT: "http://control-api:8080"
            BI_DATA_ENDPOINT: "http://data-api:8080"
            NODE_EXTRA_CA_CERTS: "/usr/local/share/ca-certificates/cert.pem"
            HC: ${HC:-0}

networks:
    main:
        driver: bridge
