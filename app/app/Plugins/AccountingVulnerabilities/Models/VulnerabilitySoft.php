<?php

namespace App\Plugins\AccountingVulnerabilities\Models;

use App\Plugins\EntityLogger\Observers\EntityLoggerObserver;
use Illuminate\Database\Eloquent\Attributes\ObservedBy;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Orchid\Filters\Filterable;
use Orchid\Filters\Types\Ilike;
use Orchid\Filters\Types\Where;
use Orchid\Filters\Types\WhereDateStartEnd;
use Orchid\Screen\AsSource;

#[ObservedBy([EntityLoggerObserver::class])]
class VulnerabilitySoft extends Model
{
    use AsSource, Filterable;

    protected $table = 'vulnerability_softs';

    protected $fillable = [
        'name',
        'vulnerability_id',
    ];

    protected $allowedFilters = [
        'id' => Where::class,
        'name' => Ilike::class,
        'vulnerability_id' => Where::class,
        'updated_at' => WhereDateStartEnd::class,
        'created_at' => WhereDateStartEnd::class,
    ];

    protected $allowedSorts = [
        'id',
        'name',
        'vulnerability_id',
        'updated_at',
        'created_at',
    ];

    public function vulnerability(): BelongsTo
    {
        return $this->belongsTo(Vulnerability::class);
    }
}
